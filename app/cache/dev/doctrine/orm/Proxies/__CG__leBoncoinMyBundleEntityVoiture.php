<?php

namespace Proxies\__CG__\le\Boncoin\MyBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Voiture extends \le\Boncoin\MyBundle\Entity\Voiture implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'le\\Boncoin\\MyBundle\\Entity\\Voiture' . "\0" . 'id', '' . "\0" . 'le\\Boncoin\\MyBundle\\Entity\\Voiture' . "\0" . 'carburant', '' . "\0" . 'le\\Boncoin\\MyBundle\\Entity\\Voiture' . "\0" . 'boiteVitesse', '' . "\0" . 'le\\Boncoin\\MyBundle\\Entity\\Voiture' . "\0" . 'marque', '' . "\0" . 'le\\Boncoin\\MyBundle\\Entity\\Voiture' . "\0" . 'annonce', '' . "\0" . 'le\\Boncoin\\MyBundle\\Entity\\Voiture' . "\0" . 'annee', '' . "\0" . 'le\\Boncoin\\MyBundle\\Entity\\Voiture' . "\0" . 'nom'];
        }

        return ['__isInitialized__', '' . "\0" . 'le\\Boncoin\\MyBundle\\Entity\\Voiture' . "\0" . 'id', '' . "\0" . 'le\\Boncoin\\MyBundle\\Entity\\Voiture' . "\0" . 'carburant', '' . "\0" . 'le\\Boncoin\\MyBundle\\Entity\\Voiture' . "\0" . 'boiteVitesse', '' . "\0" . 'le\\Boncoin\\MyBundle\\Entity\\Voiture' . "\0" . 'marque', '' . "\0" . 'le\\Boncoin\\MyBundle\\Entity\\Voiture' . "\0" . 'annonce', '' . "\0" . 'le\\Boncoin\\MyBundle\\Entity\\Voiture' . "\0" . 'annee', '' . "\0" . 'le\\Boncoin\\MyBundle\\Entity\\Voiture' . "\0" . 'nom'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Voiture $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setCarburant(\le\Boncoin\MyBundle\Entity\Carburant $carburant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCarburant', [$carburant]);

        return parent::setCarburant($carburant);
    }

    /**
     * {@inheritDoc}
     */
    public function getCarburant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCarburant', []);

        return parent::getCarburant();
    }

    /**
     * {@inheritDoc}
     */
    public function setBoiteVitesse(\le\Boncoin\MyBundle\Entity\BoiteVitesse $boiteVitesse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBoiteVitesse', [$boiteVitesse]);

        return parent::setBoiteVitesse($boiteVitesse);
    }

    /**
     * {@inheritDoc}
     */
    public function getBoiteVitesse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBoiteVitesse', []);

        return parent::getBoiteVitesse();
    }

    /**
     * {@inheritDoc}
     */
    public function setMarque(\le\Boncoin\MyBundle\Entity\Marque $marque)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMarque', [$marque]);

        return parent::setMarque($marque);
    }

    /**
     * {@inheritDoc}
     */
    public function getMarque()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMarque', []);

        return parent::getMarque();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnnee($annee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnnee', [$annee]);

        return parent::setAnnee($annee);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnnee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnnee', []);

        return parent::getAnnee();
    }

    /**
     * {@inheritDoc}
     */
    public function addCarburant(\le\Boncoin\MyBundle\Entity\Carburant $carburant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCarburant', [$carburant]);

        return parent::addCarburant($carburant);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCarburant(\le\Boncoin\MyBundle\Entity\Carburant $carburant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCarburant', [$carburant]);

        return parent::removeCarburant($carburant);
    }

    /**
     * {@inheritDoc}
     */
    public function addBoiteVitesse(\le\Boncoin\MyBundle\Entity\BoiteVitesse $boiteVitesse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBoiteVitesse', [$boiteVitesse]);

        return parent::addBoiteVitesse($boiteVitesse);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBoiteVitesse(\le\Boncoin\MyBundle\Entity\BoiteVitesse $boiteVitesse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBoiteVitesse', [$boiteVitesse]);

        return parent::removeBoiteVitesse($boiteVitesse);
    }

    /**
     * {@inheritDoc}
     */
    public function addAnnonce(\le\Boncoin\MyBundle\Entity\Annonce $annonce)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAnnonce', [$annonce]);

        return parent::addAnnonce($annonce);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAnnonce(\le\Boncoin\MyBundle\Entity\Annonce $annonce)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAnnonce', [$annonce]);

        return parent::removeAnnonce($annonce);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnnonce()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnnonce', []);

        return parent::getAnnonce();
    }

}
